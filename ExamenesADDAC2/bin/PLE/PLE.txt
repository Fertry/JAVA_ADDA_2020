head section

....


goal section

max sum(a(i,j) x[i,j], i in 0 .. alumnos, j in 0 .. grupos)

constraints section

sum(x[i,j], j in 0 .. grupos) = 1, i in 0 .. alumnos
sum(x[i,j], i in 0 .. alumnos | a(i,j) > 0) = alumEntreGrupos, j in 0 .. grupos

bin

x[i,j], i in 0 .. alumnos, j in 0 .. grupos 

/////////////////////////////////////////////////////////////////////////////////////////

head section

....


goal section

min T[0]

constraints section

sum(x[i,j], i in 0 .. n) = 1, j in 0 .. m
sum(x[i,j] c(i,j), j in 0 .. m) <= T[0], i in 0 .. n

bin

x[i,j], i in 0 .. n, j in 0 .. m

/////////////////////////////////////////////////////////////////////////////////////////

head section

....


goal section

min sum(p(i) x[i], i in 0 .. n)

constraints section

# El simbolo | indica "restringido a":
sum(x[i] | c(i,j), i in 0 .. n) >= 1, j in 0 .. m

bin

x[i], i in 0 .. n

/////////////////////////////////////////////////////////////////////////////////////////

head section

....


goal section

min sum(x[i,0], i in 0 .. n)
¿min sum(x[i,j] | j = 0, i in 0 .. n)?

constraints section

sum(x[i,j], j in 0 .. 3) = 1, i in 0 .. n
sum(x[i,j] e(i), i in 0 .. n) = variable, j in 0 .. 3
// La tercera restricción se controla en la declaración de la función!

bin

x[i,j], i in 0 .. n, j in 0 .. 3

/////////////////////////////////////////////////////////////////////////////////////////

head section

Integer nProductos()
Integer nComponente(Integer i)
Double beneficio(Integer i, Integer j)
Double cantidad(Integer i, Integer j)
Integer cantidadP(Integer j)

Integer nProductos = nProductos()


goal section

max sum(beneficio(i) x[i], i in 0 .. nProductos)

constraints section

sum(x[i] cantidad(i,j), i in 0 .. nProductos) < cantidadP(j), j in 0 .. nComponente(j)

int

x[i], i in 0 .. nProductos
